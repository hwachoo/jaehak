<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd">
	<!-- aop 사용을 위한 bean 등록 -->
	<bean id="logAdvice" class="com.yedam.myserver.common.LogAdvice"> </bean>
	<bean id="afterLog" class="com.yedam.myserver.common.AfterLog"></bean>
	<bean id="aroundAdvice" class="com.yedam.myserver.common.AroundAdvice"></bean>
<!-- <aop:config>
	logAdvice가 들어올 때 service method
	method 정의할 package, class명 작성
		<aop:pointcut expression="execution(* com.yedam..*Impl.*(..))" id="allpointcut"/>
		method 이름이 find인 경우에만 실행
		<aop:pointcut expression="execution(* com.yedam..*Impl.find*(..))" id="findpointcut"/>
		bean id와 pointcut id 묶기
		<aop:aspect ref="logAdvice">
			service 실행 전
			<aop:before method="printLog" pointcut-ref="allpointcut"/>
		</aop:aspect>
		<aop:aspect ref="afterLog">
			<aop:after-returning method="pringLog" pointcut-ref="allpointcut" returning="obj"/>
		</aop:aspect>
		<aop:aspect ref="aroundAdvice">
			<aop:around method="aroundLog" pointcut-ref="allpointcut"/>
		</aop:aspect>
	</aop:config> -->
</beans>
