<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-5.2.xsd
		http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
	<!-- name space -> security 추가 -->
	<!-- css/* = security 체크 x -->
	<security:http pattern="/css/**" security="none" />
	
	<security:http>
		<!-- 아무나 접근 가능함 -->
		<security:intercept-url pattern="/top.jsp"
			access="permitAll()" />
			<!-- 무한루프 방지 -->
			<security:intercept-url pattern="/login.jsp"
			access="permitAll()" />
		<!-- admin 요청 = role_admin권한인 사람만 접근 가능(그 외 403에러) -->
		<security:intercept-url pattern="/admin/**"
			access="hasAuthority('ROLE_ADMIN')" />
		<!-- 그 외에는 로그인 해야만 접근 가능-->
		<security:intercept-url pattern="/**"
			access="isAuthenticated()" />
			<!-- 로그인 후 top.jsp로 이동 -->
			<!-- parameter이름과 name이 다를 경우 지정 -->
		<security:form-login 
			login-page="/login.jsp"
			login-processing-url="/processLogin"
			username-parameter="id"
			authentication-success-handler-ref="loginSuccessHandler"
			default-target-url="/top.jsp" />
			<!-- success와 targeturl 중복안됨, ref에서 sendredirect로 지정해줘야함 -->
		<security:logout logout-url="/logout"
			logout-success-url="/top.jsp" />
		<!-- jsp 있을 경우 error-page 사용 javapage의 경우 ref -->
		<security:access-denied-handler error-page="/accessDenied.jsp"/>
					
		<!-- csrf token -->
		<security:csrf disabled="false" />
	</security:http>
	<security:authentication-manager>
	<!-- userServiceImpl을 통해 로그인 체크 -->
		<security:authentication-provider user-service-ref="userServiceImpl">
		<!-- 비밀번호 암호화 -->
		<security:password-encoder hash="bcrypt"/>
		<!-- 테스트계정(db에서 불러오는 계정 아님)
			<security:user-service>
			{noop} - 암호화되지 않았다는 표시
				<security:user name="user" password="{noop}1234"
					authorities="ROLE_USER" />
				<security:user name="admin" password="{noop}1234"
					authorities="ROLE_ADMIN" />
			</security:user-service> -->
			<!-- dataSource-context.xml에 있는 datasource -->
			<!-- users = id, password 조회
			authorities = 해당 id의 role 정보 조회 {' ROLE_' || upper(role)} = role 규칙-->
			<!-- <security:jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select id, password, 1
										from users
										where id = ?"
			authorities-by-username-query="select id, 'ROLE_' || upper(role)
											from users
											where id = ?"/> -->
		</security:authentication-provider>
	</security:authentication-manager>
</beans>
